@mixin breakpoint($point) {
	@if $point == xs {
		@media (min-width: $small-screen-width) { @content; }
	}
	@else if $point == sm {
		@media (min-width: $medium-screen-width) { @content; }
	}
	@else if $point == md {
		@media (min-width: $standard-screen-width) { @content; }
	}
	@else if $point == lg {
		@media (min-width: $large-screen-width) { @content; }
	}
	@else if $point == retina {
		@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) { @content; }
	}
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

$prefixes: -webkit-, -moz-, -o-, "";
@mixin borderRadius($size...) {
	@if length($size) == 1 {
		@each $prefix in $prefixes {
			#{$prefix}border-radius: $size;
		}
	} @else {
		@include customBorderRadius($size...);
	}
}

@mixin customBorderRadius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
	@each $prefix in $prefixes {
		@if $prefix == "-moz-" {
			@if unit($topLeft) != 0 { -moz-border-radius-topleft: $topLeft; }
			@if unit($topRight) != 0 { -moz-border-radius-topright: $topRight; }
			@if unit($bottomRight) != 0 { -moz-border-radius-bottomright: $bottomRight; }
			@if unit($bottomLeft) != 0 { -moz-border-radius-bottomleft: $bottomLeft; }
		} @else {
			@if unit($topLeft) != 0 { #{$prefix}border-top-left-radius: $topLeft; }
			@if unit($topRight) != 0 { #{$prefix}border-top-right-radius: $topRight; }
			@if unit($bottomRight) != 0 { #{$prefix}border-bottom-right-radius: $bottomRight; }
			@if unit($bottomLeft) != 0 { #{$prefix}border-bottom-left-radius: $bottomLeft; }
		}
	}
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }

    &:-moz-placeholder { /* Firefox 18- */
        @content;
    }

    &::-moz-placeholder {  /* Firefox 19+ */
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }
}

// Overlays.
@mixin overlay {
	&:before {
		display: block !important;
		position: absolute;
		z-index: 1;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: $overlay;
		content: "";
		pointer-events: none;

		@include transition;
	}
}